name: iappplayer

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: '输入版本号, 例如：v1.2.0'
        required: false
        default: 'manual-build'
        type: string
      release_notes:
        description: '更新说明 (支持多行，使用 | 分隔不同行)'
        required: false
        default: ''
        type: string

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
      
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'
      
      - name: Set version info
        id: version_info
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${{ github.ref_name }}"
          fi
          
          if [ -z "$VERSION" ] || [ "$VERSION" = "manual-build" ]; then
            VERSION="v$(date +%Y%m%d-%H%M%S)"
          fi
          
          VERSION_NUMBER=${VERSION#v}
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "version_number=$VERSION_NUMBER" >> $GITHUB_OUTPUT
      
      - name: Build APK
        run: |
          flutter pub get
          
          cd example
          
          rm -rf .dart_tool build
          
          flutter pub get
          
          ls -la .dart_tool/
          
          flutter build apk --release --no-tree-shake-icons
          
          mv build/app/outputs/flutter-apk/app-release.apk ../iappplayer_${{ steps.version_info.outputs.version_number }}.apk
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: iappplayer_${{ steps.version_info.outputs.version_number }}
          path: iappplayer_${{ steps.version_info.outputs.version_number }}.apk

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Set release info
        id: release_info
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
            RELEASE_NOTES_RAW="${{ github.event.inputs.release_notes }}"
          else
            VERSION="${{ github.ref_name }}"
            RELEASE_NOTES_RAW=""
          fi
          
          if [ -z "$VERSION" ] || [ "$VERSION" = "manual-build" ]; then
            VERSION="v$(date +%Y%m%d-%H%M%S)"
          fi
          
          VERSION_NUMBER=${VERSION#v}
          
          RELEASE_NOTES=$(echo "$RELEASE_NOTES_RAW" | sed 's/ | /\n/g' | sed 's/|/\n/g')
          
          if [ -z "$RELEASE_NOTES" ]; then
            RELEASE_NOTES=$(cat <<-END
          iappplayer $VERSION
          
          ## 更新内容
          - 自动构建版本
          
          ## 下载说明
          - APK 文件：iappplayer_${VERSION_NUMBER}.apk
          END
          )
          fi
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "version_number=$VERSION_NUMBER" >> $GITHUB_OUTPUT
          echo "release_notes<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: iappplayer_${{ steps.release_info.outputs.version_number }}
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.release_info.outputs.version }}
          name: iappplayer ${{ steps.release_info.outputs.version }}
          body: ${{ steps.release_info.outputs.release_notes }}
          files: iappplayer_${{ steps.release_info.outputs.version_number }}.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
