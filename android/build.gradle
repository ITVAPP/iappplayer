group 'com.itvapp.iapp_player.iapp_player'
version '1.6.8'

buildscript {
    ext.media3Version = "1.4.1"
    ext.workVersion = "2.9.0"
    ext.kotlinVersion = "1.9.23"
    
    repositories {
        google()
        mavenCentral()
    }
    
    dependencies {
        classpath 'com.android.tools.build:gradle:8.6.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    namespace "com.itvapp.iapp_player"
    compileSdk 35
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    
    kotlinOptions {
        jvmTarget = '11'
    }
    
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 35
        
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a'
        }
    }
    
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        disable 'InvalidPackage', 'GradleDependency'
    }
    
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    
    packagingOptions {
        pickFirst 'META-INF/**'
        pickFirst 'lib/*/libc++_shared.so'
        // 处理 Media3 可能的冲突
        pickFirst 'META-INF/DEPENDENCIES'
        pickFirst 'META-INF/LICENSE'
        pickFirst 'META-INF/LICENSE.txt'
        pickFirst 'META-INF/NOTICE'
        pickFirst 'META-INF/NOTICE.txt'
    }
}

dependencies {
    // 确保版本一致性
    implementation platform("androidx.media3:media3-bom:$media3Version")
    
    // Media3 核心播放器和流媒体支持
    implementation "androidx.media3:media3-exoplayer"
    implementation "androidx.media3:media3-exoplayer-hls"
    implementation "androidx.media3:media3-exoplayer-dash"
    implementation "androidx.media3:media3-exoplayer-smoothstreaming"
    implementation "androidx.media3:media3-exoplayer-rtsp"
    
    // UI 组件
    implementation "androidx.media3:media3-ui"
    
    // 会话和通知
    implementation "androidx.media3:media3-session"
    
    // 核心组件和数据源
    implementation "androidx.media3:media3-common"
    implementation "androidx.media3:media3-datasource"
    implementation "androidx.media3:media3-datasource-rtmp"
    implementation "androidx.media3:media3-datasource-cronet"
    implementation "androidx.media3:media3-extractor"
    
    // 基础解码器
    implementation "androidx.media3:media3-decoder"
    
    // 🔧 FFmpeg 解码器版本
    implementation "org.jellyfin.media3:media3-ffmpeg-decoder:$media3Version+1"
    
    // 额外的 Media3 组件
    implementation "androidx.media3:media3-container"
    implementation "androidx.media3:media3-effect"
    implementation "androidx.media3:media3-database"
    
    // WorkManager
    implementation "androidx.work:work-runtime-ktx:$workVersion"
    
    // Kotlin 标准库
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
}
